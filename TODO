Order of no particular importance:

*** pk-notify-icon (client) ***
Do automatic updates at login time when system has gone idle
 * needs gnome-screensaver integration
NOTE: RELEASE BLOCKER

*** don't output the same package in different repos ***
Need to store Package() in the server properly, and compare the first chunk
(not the data) to avoid reporting the same package more than once.
NOTE: RELEASE BLOCKER

*** Add new callback for status ***
TimeRemaining()
 
*** get the depends and requires in the tabbed UI ***
We really don't want to remove glibc...
NOTE: RELEASE BLOCKER

*** the backends will have repo controls ***
a(s=rid,s=description)=GetRepoList()
RepoEnable(s=rid,s=value)
RepoSetData(s=rid,s=data,s=value)

*** pk-application (client) ***
Use an icons for installed and not-installed rather than tickboxes
Refresh the query list after an install or remove (means saving the query and re-issuing)

*** Prepare download to refresh system ***
Either use a flag or a new method. I'm not sure which yet.

*** Add a way to import GPG keys ***
In fedora, if you add a signed repo you have to agree to the GPG key.

*** Split up PolicyKit install into different types ***
Have different permissions for signed and unsigned repos.

*** task_client has to return GError ***
Client programs using libpackagekit should know the error, rather than just
"it failed"

*** Handle rollbacks for select backends ***
To do rollbacks sanely in PK we need a few things:
 * emit internal signal for SetTransactionData
 * write pk_transaction_id_equal to not compare data
 * allow transaction data to be changed in _db
 * use an new method to handle the rollbacks and pass it to the backend

