// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace PackageKit {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class PackageList : PackageKit.ObjList {

		[Obsolete]
		protected PackageList(GLib.GType gtype) : base(gtype) {}
		public PackageList(IntPtr raw) : base(raw) {}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_package_list_new();

		public PackageList () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (PackageList)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = pk_package_list_new();
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_remove(IntPtr raw, IntPtr package_id);

		public bool Remove(string package_id) {
			IntPtr native_package_id = GLib.Marshaller.StringToPtrGStrdup (package_id);
			bool raw_ret = pk_package_list_remove(Handle, native_package_id);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_package_id);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_contains(IntPtr raw, IntPtr package_id);

		public bool Contains(string package_id) {
			IntPtr native_package_id = GLib.Marshaller.StringToPtrGStrdup (package_id);
			bool raw_ret = pk_package_list_contains(Handle, native_package_id);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_package_id);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_sort(IntPtr raw);

		public bool Sort() {
			bool raw_ret = pk_package_list_sort(Handle);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_sort_info(IntPtr raw);

		public bool SortInfo() {
			bool raw_ret = pk_package_list_sort_info(Handle);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_set_fuzzy_arch(IntPtr raw, bool fuzzy_arch);

		public bool SetFuzzyArch(bool fuzzy_arch) {
			bool raw_ret = pk_package_list_set_fuzzy_arch(Handle, fuzzy_arch);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern uint pk_package_list_get_size(IntPtr raw);

		public uint Size {
			get {
				uint raw_ret = pk_package_list_get_size(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_sort_summary(IntPtr raw);

		public bool SortSummary() {
			bool raw_ret = pk_package_list_sort_summary(Handle);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_package_list_add(IntPtr raw, int info, IntPtr ident, IntPtr summary);

		public bool Add(PackageKit.InfoEnum info, PackageKit.PackageId ident, string summary) {
			IntPtr native_summary = GLib.Marshaller.StringToPtrGStrdup (summary);
			bool raw_ret = pk_package_list_add(Handle, (int) info, ident == null ? IntPtr.Zero : ident.Handle, native_summary);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_summary);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_package_list_to_strv(IntPtr raw);

		public string ToStrv() {
			IntPtr raw_ret = pk_package_list_to_strv(Handle);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_package_list_get_obj(IntPtr raw, uint item);

		public PackageKit.PackageObj GetObj(uint item) {
			IntPtr raw_ret = pk_package_list_get_obj(Handle, item);
			PackageKit.PackageObj ret = raw_ret == IntPtr.Zero ? null : (PackageKit.PackageObj) GLib.Opaque.GetOpaque (raw_ret, typeof (PackageKit.PackageObj), false);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_package_list_get_type();

		public static new GLib.GType GType {
			get {
				IntPtr raw_ret = pk_package_list_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		static PackageList ()
		{
			GtkSharp.PackagekitSharp.ObjectManager.Initialize ();
		}
#endregion
	}
}
