#!/usr/bin/python

#Marshall file
libpackagekit = bld.create_obj('gnome', 'shlib')
libpackagekit.add_marshal_file('pk-marshal.list', 'pk_marshal', '--header')
libpackagekit.add_marshal_file('pk-marshal.list', 'pk_marshal', '--body')
libpackagekit.uselib = 'GLIB GOBJECT DBUS DBUS_GLIB'
libpackagekit.add_objects = 'libgbus libselftest'
libpackagekit.source = """
	pk-debug.c
	pk-connection.c
	pk-package-id.c
	pk-package-list.c
	pk-enum-list.c
	pk-enum.c
	pk-common.c
	pk-client.c
	pk-task-list.c
	pk-job-list.c
	pk-polkit-client.c
"""

# libtool versioning - CURRENT.REVISION.AGE
# increment:
# CURRENT	If the API or ABI interface has changed (reset REVISION to 0)
# REVISION	If the API and ABI remains the same, but bugs are fixed.
# AGE		If libpackagekit can be linked into executables which can be
# 		built with previous versions of this library. Don't use.
libpackagekit.vnum='3.0.0'

defines = bld.env_of_name('default')['defines']
if defines.get('PK_BUILD_NETWORKMANAGER', False):
    libpackagekit.uselib += ' NM_GLIB'
    libpackagekit.source += '''
	pk-network-nm.c
'''
else:
    libpackagekit.source += '''
	pk-network-dummy.c
'''


libpackagekit.includes      = '. ../libgbus ../libselftest'
libpackagekit.target        = 'packagekit'
libpackagekit.name          = 'libpackagekit'

# install headers to /usr/include/packagekit/
install_files('PREFIX', 'include/packagekit',"""
	pk-debug.h
	pk-connection.h
	pk-network.h
	pk-package-id.h
	pk-package-list.h
	pk-enum-list.h
	pk-enum.h
	pk-common.h
	pk-client.h
	pk-task-list.h
	pk-job-list.h
	pk-polkit-client.h
""")


#TODO: if Params.g_options.tests then add the self test program: pk-self-test.c and all the libs above and execute the pk-self-test application

