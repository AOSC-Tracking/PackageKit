#! /usr/bin/env python
# encoding: utf-8
#
# Copyright (C) 2007 Richard Hughes <richard@hughsie.com>
#
# Licensed under the GNU General Public License Version 2
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

#create the daemon
obj = bld.create_obj('gnome', 'program')
obj.source='''
pk-backend.c
pk-backend-python.c
pk-conf.c
pk-engine.c
pk-inhibit.c
pk-main.c
pk-spawn.c
pk-thread-list.c
pk-time.c
pk-transaction-db.c
pk-transaction-id.c
pk-transaction-list.c
'''

defines = bld.env_of_name('default')['defines']

if defines.get('SECURITY_TYPE_POLKIT', False):
    obj.source += '''
	pk-security-polkit.c
'''

if defines.get('SECURITY_TYPE_DUMMY', False):
    obj.source += '''
	pk-security-dummy.c
'''


obj.includes='. ../libpackagekit ../libselftest'
obj.uselib='DBUS_GLIB GMODULE SQLITE GTHREAD'
obj.uselib_local = 'libpackagekit'
#obj.add_objects = 'selftest'
obj.target='packagekitd'
obj.add_dbus_file('pk-interface.xml', 'pk_engine', 'glib-server')
obj.add_marshal_file('pk-marshal.list', 'pk_marshal', '--header')
obj.add_marshal_file('pk-marshal.list', 'pk_marshal', '--body')
#obj.env.append_value('CCDEFINES', 'LOCALSTATEDIR="%s"' % obj.env['LOCALSTATEDIR'])
obj.env.append_value('CCDEFINES', 'DATABASEDIR=PK_DB_DIR')


#TODO: if SECURITY_TYPE_POLKIT then obj.source needs to have pk-security-polkit.c added else pk-security-dummy.c

# install backend headers to /usr/include/packagekit-backends/
install_files('PREFIX', 'include/packagekit-backends', '''
	pk-backend.h
	pk-backend-python.h
''')


#TODO: if Params.g_options.gcov then we need to execute $(top_srcdir)/tools/create-coverage-report.sh packagekit $(filter %.c,$(packagekitd_SOURCES)) > gcov.txt

#TODO: if Params.g_options.gprof then we need to execute gprof .libs/pk-self-test > gprof.txt

#TODO: if Params.g_options.tests then add the self test program: pk-self-test.c and all the libs above and execute the pk-self-test application

